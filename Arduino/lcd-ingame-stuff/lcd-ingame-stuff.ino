#include <U8g2lib.h>

#define SCL 12
#define SDA 14

U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE, /* clock=*/ SCL, /* data=*/ SDA);

// 'killstreak icon', 26x24px
const unsigned char epd_bitmap_killstreak_icon [] PROGMEM = {
	0xff, 0x00, 0x00, 0x00, 0xff, 0x01, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0xfc, 0x07, 0x00, 0x00, 
	0xf8, 0x0f, 0x00, 0x00, 0xf0, 0x1f, 0x00, 0x00, 0xc6, 0x3f, 0x00, 0x00, 0x8e, 0x7f, 0x00, 0x00, 
	0x1e, 0xff, 0x00, 0x00, 0x3e, 0xfc, 0x01, 0x00, 0x7e, 0xf8, 0x03, 0x00, 0xfe, 0xf0, 0x07, 0x00, 
	0xfe, 0xf0, 0x07, 0x00, 0x7e, 0xf8, 0x03, 0x00, 0x3e, 0xfc, 0x01, 0x00, 0x1e, 0xff, 0x00, 0x00, 
	0x8e, 0x7f, 0x00, 0x00, 0xc6, 0x3f, 0x00, 0x00, 0xf0, 0x1f, 0x00, 0x00, 0xf8, 0x0f, 0x00, 0x00, 
	0xfc, 0x07, 0x00, 0x00, 0xfe, 0x03, 0x00, 0x00, 0xff, 0x01, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00
};
// 'skull', 26x24px
const unsigned char epd_bitmap_skull [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0xff, 0x0f, 0x00, 0xc0, 0xff, 0x0f, 0x00, 
	0xf0, 0xff, 0x3f, 0x00, 0xf0, 0xff, 0x3f, 0x00, 0xf0, 0xff, 0x3f, 0x00, 0xf0, 0xff, 0x3f, 0x00, 
	0xfc, 0x30, 0xfc, 0x00, 0xfc, 0x30, 0xfc, 0x00, 0x3c, 0x30, 0xf0, 0x00, 0x3c, 0x30, 0xf0, 0x00, 
	0x3c, 0xfc, 0xf0, 0x00, 0x3c, 0xfc, 0xf0, 0x00, 0xf0, 0xff, 0x3f, 0x00, 0xf0, 0xff, 0x3f, 0x00, 
	0xf0, 0xcf, 0x3f, 0x00, 0xf0, 0xcf, 0x3f, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xff, 0x03, 0x00, 
	0x00, 0x33, 0x03, 0x00, 0x00, 0x33, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
// 'health', 26x24px
const unsigned char epd_bitmap_health [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 
	0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 
	0x00, 0xfc, 0x00, 0x00, 0xf8, 0xff, 0x7f, 0x00, 0xf8, 0xff, 0x7f, 0x00, 0xf8, 0xff, 0x7f, 0x00, 
	0xf8, 0xff, 0x7f, 0x00, 0xf8, 0xff, 0x7f, 0x00, 0xf8, 0xff, 0x7f, 0x00, 0x00, 0xfc, 0x00, 0x00, 
	0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 
	0x00, 0xfc, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

// Array of all bitmaps for convenience. (Total bytes used to store images in PROGMEM = 336)
const int epd_bitmap_allArray_LEN = 3;
const unsigned char* epd_bitmap_allArray[3] = {
	epd_bitmap_health,
	epd_bitmap_killstreak_icon,
	epd_bitmap_skull
};

String data;
String KSValue;
String HValue;

void setup() {
  // put your setup code here, to run once:
  Serial.begin(115200);
  Serial.setTimeout(1);
  Serial.println("Init Serial Comm");
  u8g2.begin();
  u8g2.setFont(u8g2_font_t0_11b_tr);
}

void readData(){
  while(!Serial.available());
  data = Serial.readString();
  if(data.startsWith("h")){
    HValue = data.substring(1,data.length());
  }
  if(data.startsWith("k")){
    KSValue = data.substring(1,data.length());
  }
}

void loop() {
  // put your main code here, to run repeatedly:
  readData();
  u8g2.clearBuffer();
  u8g2.drawXBMP(10,37,26,24,epd_bitmap_health);
  u8g2.drawXBMP(80,37,26,24,epd_bitmap_killstreak_icon);
  u8g2.setCursor(90,27);
  u8g2.print(KSValue);
  u8g2.setCursor(10,27);
  u8g2.print(HValue);
  u8g2.sendBuffer();
  // u8g2.clearBuffer();
  // u8g2.setCursor(0,10);
  // u8g2.drawXBMP(64,32,26,24,epd_bitmap_skull);
  // u8g2.sendBuffer();
  delay(20);
}
